@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":ViewCommandParser" as ViewCommandParser LOGIC_COLOR
participant "v:ViewCommand" as ViewCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
participant "n:NameContainsKeywordPredicate" as NameContainsKeywordPredicate LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("view -name John")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("view -name John")
activate AddressBookParser

create ViewCommandParser
AddressBookParser -> ViewCommandParser
activate ViewCommandParser

ViewCommandParser --> AddressBookParser
deactivate ViewCommandParser

AddressBookParser -> ViewCommandParser : parse("-name John")
activate ViewCommandParser

create  NameContainsKeywordPredicate
ViewCommandParser -> NameContainsKeywordPredicate
activate NameContainsKeywordPredicate

NameContainsKeywordPredicate -> ViewCommandParser : n
deactivate NameContainsKeywordPredicate

create ViewCommand
ViewCommandParser -> ViewCommand : ViewCommand(n)
activate ViewCommand

ViewCommand -->  ViewCommandParser : v
deactivate ViewCommand

ViewCommandParser --> AddressBookParser : v
deactivate ViewCommandParser

AddressBookParser --> LogicManager : v
deactivate AddressBookParser

LogicManager -> ViewCommand : execute(v)
activate ViewCommand

ViewCommand -> Model : updateFilteredPersonList(n)
activate Model

Model --> ViewCommand
deactivate Model

create CommandResult
ViewCommand -> CommandResult
activate CommandResult

CommandResult --> ViewCommand
deactivate CommandResult

ViewCommand --> LogicManager : r
deactivate ViewCommand

[<--LogicManager
deactivate LogicManager
@enduml
